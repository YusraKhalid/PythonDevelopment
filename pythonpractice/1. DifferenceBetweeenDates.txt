"""
Given your birthday and the current date, calculate your age in days.
Account for leap days.
Assume that the birthday and current date are correct dates.
"""
import calendar

no_of_days = [31, 59, 90, 120, 151, 181, 212, 243, 273, 303, 334, 365]


def days_between_dates(year1, month1, day1, year2, month2, day2):
    leap_days = False
    days = 0
    if month2 - month1 != 0:
        days = no_of_days[abs(month1-month2) - 1]
    if abs(month2 - month1) >= 2:  # Check if february is included in the date and if it comes during leap year
        days += leap_year_extra_days(year1, year2)
        leap_days = True
    years = year2 - year1
    days += years * 365
    if leap_days == False and years >= 1:  # Check if leap year extra days were already added, if not calculate and add
        days += leap_year_extra_days(year1, year2)
    days += abs(day2-day1)
    return days


def leap_year_extra_days(year1, year2):
    start_leap_year = False
    years = 0
    while not start_leap_year:  # Find the first occurrence of leap year from year1 to year2
        start_leap_year = calendar.isleap(year1)
        if not start_leap_year:
            year1 += 1
    while year1 <= year2:
        year1 += 4
        years += 1
    return years


def test():  # Test routine
    test_cases = [((2012, 1, 1, 2012, 2, 28), 58),
                  ((2012, 1, 1, 2012, 3, 1), 60),
                  ((2011, 6, 30, 2012, 6, 30), 366),
                  ((2011, 1, 1, 2012, 8, 8), 585),
                  ((1900, 1, 1, 1999, 12, 31), 36523)]
    for (args, answer) in test_cases:
        result = days_between_dates(*args)
        if result != answer:
            print "Test with data:", args, "failed"
        else:
            print "Test case passed!"


test()
